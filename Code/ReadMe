Todo:

* Transformers:
    * add a classification embedding to the summariser


* GNNs
    * switch additive attention for dot-product
    * edge info



* General:
    * wandb
    * data/model parallelism with pytorch to use multiple GPU's for faster training


* Tests:
    * HDE cannon gnn
        * pooling ratios
    * softmax pool scores
    * 2L transformers
    * 2,4L GNN
    * bert with only last layer tunable + dropout
    * edge info
    * adam
    * without complement edges
    * add more layer norms
    * try type switching instead of type embeddings for summ

* house keeping:
    * ssh keygen for viz
    * make some sort of experiment scheduler
    * count discarded examples
    * move all viz into viz folder
    * rename .data to .training_data
        * fix bug where a valid acc can be double included





Installs:
ENV_NAME=gnn_env
conda create --name ${ENV_NAME} python=3.7
y
conda activate ${ENV_NAME}

CUDA=cu102
TORCH=1.6.0
conda install pytorch==${TORCH} torchvision==0.7.0 cudatoolkit=10.2 -c pytorch
pip install torch-scatter -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html --user --no-cache-dir
pip install torch-sparse -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html --user --no-cache-dir
pip install torch-cluster -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html --user --no-cache-dir
pip install torch-spline-conv -f https://pytorch-geometric.com/whl/torch-${TORCH}+${CUDA}.html --user --no-cache-dir
pip install torch-geometric --user
pip install transformers --user
conda install -c conda-forge nlp
# token only models do not need spacy
pip install -U spacy==2.1.3 --user
python -m spacy download en_core_web_sm
# NC not needed unless corefs are used as nodes
pip install neuralcoref --no-binary neuralcoref --user
# for vizualisation capabilities
conda install -c anaconda python-graphviz


